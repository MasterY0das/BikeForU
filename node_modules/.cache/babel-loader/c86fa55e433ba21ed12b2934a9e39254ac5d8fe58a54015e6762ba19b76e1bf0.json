{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\BikeForU\\\\BikeForU\\\\src\\\\pages\\\\PasswordReset.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      setStatus('error');\n      return;\n    }\n    if (newPassword.length < 6) {\n      setErrorMessage('Password must be at least 6 characters long');\n      setStatus('error');\n      return;\n    }\n    setStatus('loading');\n    try {\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (error) throw error;\n      setStatus('success');\n    } catch (error) {\n      setStatus('error');\n      setErrorMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-black text-white flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto px-6 py-12 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl font-bold mb-4\",\n          children: \"BikeForU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-gray-400\",\n          children: \"Reset your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 rounded-2xl p-8 shadow-2xl\",\n        children: status === 'success' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-500 text-6xl mb-4\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-semibold\",\n            children: \"Password Reset Successful!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400\",\n            children: \"Your password has been successfully updated.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/'),\n            className: \"apple-button\",\n            children: \"Return to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleResetPassword,\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              placeholder: \"New Password\",\n              className: \"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-blue-500 text-white\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              placeholder: \"Confirm New Password\",\n              className: \"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-blue-500 text-white\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: status === 'loading',\n            className: \"apple-button w-full disabled:opacity-50\",\n            children: status === 'loading' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-5 w-5 border-t-2 border-b-2 border-white mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), \"Resetting Password...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this) : 'Reset Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"2/P59YmsrTXmgwul6heCUSnVYzk=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","supabase","jsxDEV","_jsxDEV","PasswordReset","_s","searchParams","navigate","newPassword","setNewPassword","confirmPassword","setConfirmPassword","status","setStatus","errorMessage","setErrorMessage","handleResetPassword","e","preventDefault","length","error","auth","updateUser","password","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/surya/BikeForU/BikeForU/src/pages/PasswordReset.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nconst PasswordReset: React.FC = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [status, setStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleResetPassword = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (newPassword !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match');\r\n      setStatus('error');\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      setErrorMessage('Password must be at least 6 characters long');\r\n      setStatus('error');\r\n      return;\r\n    }\r\n\r\n    setStatus('loading');\r\n\r\n    try {\r\n      const { error } = await supabase.auth.updateUser({\r\n        password: newPassword\r\n      });\r\n\r\n      if (error) throw error;\r\n      setStatus('success');\r\n    } catch (error: any) {\r\n      setStatus('error');\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\r\n      <div className=\"max-w-2xl mx-auto px-6 py-12 text-center\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-5xl font-bold mb-4\">BikeForU</h1>\r\n          <p className=\"text-xl text-gray-400\">Reset your password</p>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-900 rounded-2xl p-8 shadow-2xl\">\r\n          {status === 'success' ? (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"text-green-500 text-6xl mb-4\">âœ“</div>\r\n              <h2 className=\"text-3xl font-semibold\">Password Reset Successful!</h2>\r\n              <p className=\"text-gray-400\">Your password has been successfully updated.</p>\r\n              <button\r\n                onClick={() => navigate('/')}\r\n                className=\"apple-button\"\r\n              >\r\n                Return to Home\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <form onSubmit={handleResetPassword} className=\"space-y-6\">\r\n              <div className=\"space-y-4\">\r\n                <input\r\n                  type=\"password\"\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  placeholder=\"New Password\"\r\n                  className=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-blue-500 text-white\"\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  placeholder=\"Confirm New Password\"\r\n                  className=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-blue-500 text-white\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              {status === 'error' && (\r\n                <p className=\"text-red-500 text-sm\">{errorMessage}</p>\r\n              )}\r\n\r\n              <button\r\n                type=\"submit\"\r\n                disabled={status === 'loading'}\r\n                className=\"apple-button w-full disabled:opacity-50\"\r\n              >\r\n                {status === 'loading' ? (\r\n                  <div className=\"flex items-center justify-center\">\r\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-t-2 border-b-2 border-white mr-2\"></div>\r\n                    Resetting Password...\r\n                  </div>\r\n                ) : (\r\n                  'Reset Password'\r\n                )}\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}